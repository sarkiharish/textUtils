{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Harish\\\\Desktop\\\\CWH\\\\textutils\\\\src\\\\components\\\\TextForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n\n  const [text, setText] = useState(\"\");\n\n  const changeToUppercase = () => {\n    let newText = text.toUpperCase();\n    setText(newText);\n  };\n\n  const changeToLowercase = () => {\n    let newText = text.toLowerCase();\n    setText(newText);\n  };\n\n  const clearText = () => {\n    let newText = '';\n    setText(newText);\n  }; // const onTranslate = () => {    \n  //     var options =    \n  //      {    \n  //       sourceLanguage:    \n  //       google.elements.transliteration.LanguageCode.ENGLISH,    \n  //       destinationLanguage:    \n  //       google.elements.transliteration.LanguageCode.HINDI,    \n  //       shortcutKey:    \n  //        'ctrl+g',    \n  //        transliterationEnabled:    \n  //         true    \n  //       };  \n  //  }  \n\n\n  const onCapitalize = () => {\n    // let firstChar = text.charAt(0);\n    // let newText = firstChar.toUpperCase();\n    // setText(newText+text.slice(1));\n    let newText = text.split(\" \").map(currentValue => {\n      let newText = currentValue[0].toUpperCase() + currentValue.slice(1);\n      return newText;\n    });\n    setText(newText.join());\n  };\n\n  const changeHandle = event => {\n    setText(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          value: text,\n          onChange: changeHandle,\n          id: \"myBox\",\n          rows: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-1\",\n        onClick: changeToUppercase,\n        children: \"Convert to UpperCase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-1\",\n        onClick: changeToLowercase,\n        children: \"Convert to LowerCase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-1\",\n        onClick: clearText,\n        children: \"Clear Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-1\",\n        onClick: onCapitalize,\n        children: \"Capitalize\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Text Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [text.split(\"\").length, \" Words and \", text.length, \" characters.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Can be read in \", 0.008 * text.split(\"\").length, \" minutes.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TextForm, \"3t0DFnMi16eB/7p7iIKtjG5r68g=\");\n\n_c = TextForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"sources":["C:/Users/Harish/Desktop/CWH/textutils/src/components/TextForm.js"],"names":["React","useState","TextForm","props","text","setText","changeToUppercase","newText","toUpperCase","changeToLowercase","toLowerCase","clearText","onCapitalize","split","map","currentValue","slice","join","changeHandle","event","target","value","heading","length"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const [text, setText] = useState(\"\");\r\n\r\n    const changeToUppercase = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n\r\n    const changeToLowercase = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n    }\r\n\r\n    const clearText = () => {\r\n        let newText = ('');\r\n        setText(newText);\r\n    }\r\n\r\n    // const onTranslate = () => {    \r\n    //     var options =    \r\n    //      {    \r\n    //       sourceLanguage:    \r\n    //       google.elements.transliteration.LanguageCode.ENGLISH,    \r\n    //       destinationLanguage:    \r\n    //       google.elements.transliteration.LanguageCode.HINDI,    \r\n    //       shortcutKey:    \r\n    //        'ctrl+g',    \r\n    //        transliterationEnabled:    \r\n    //         true    \r\n    //       };  \r\n    //  }  \r\n\r\n    const onCapitalize = () => {\r\n        // let firstChar = text.charAt(0);\r\n        // let newText = firstChar.toUpperCase();\r\n        // setText(newText+text.slice(1));\r\n\r\n        let newText = text.split(\" \").map((currentValue) =>{\r\n            let newText = currentValue[0].toUpperCase()+currentValue.slice(1);\r\n            return newText;\r\n\r\n        });\r\n        setText(newText.join());\r\n    }\r\n\r\n    const changeHandle = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} onChange={changeHandle} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-1\" onClick={changeToUppercase}>Convert to UpperCase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={changeToLowercase}>Convert to LowerCase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={clearText}>Clear Text</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={onCapitalize}>Capitalize</button>\r\n        </div>\r\n\r\n        <div className=\"container my-3\">\r\n            <h2>Text Summary</h2>\r\n            <p>{text.split(\"\").length} Words and {text.length} characters.</p>\r\n            <p>Can be read in {0.008 * text.split(\"\").length} minutes.</p>\r\n            <h2>Preview</h2>\r\n            <p>{text}</p>\r\n        </div>\r\n\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}