{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Harish\\\\Desktop\\\\CWH\\\\textutils\\\\src\\\\components\\\\TextForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n\n  const [text, setText] = useState(\"\");\n\n  const changeToUppercase = () => {\n    let newText = text.toUpperCase();\n    setText(newText);\n    props.showAlert(\"Converted to UpperCase!!!\", \"success\");\n  };\n\n  const changeToLowercase = () => {\n    let newText = text.toLowerCase();\n    setText(newText);\n    props.showAlert(\"Converted to LowerCase!!!\", \"success\");\n  };\n\n  const clearText = () => {\n    let newText = '';\n    setText(newText);\n    props.showAlert(\"Text cleared!!!\", \"success\");\n  }; // const onTranslate = () => {    \n  //     var options =    \n  //      {    \n  //       sourceLanguage:    \n  //       google.elements.transliteration.LanguageCode.ENGLISH,    \n  //       destinationLanguage:    \n  //       google.elements.transliteration.LanguageCode.HINDI,    \n  //       shortcutKey:    \n  //        'ctrl+g',    \n  //        transliterationEnabled:    \n  //         true    \n  //       };  \n  //  }  \n  // const onCapitalize = () => {\n  //    if(text.length===0){\n  //        console.log(\"Please enter text first.\");\n  //    }\n  //    const words = text.split(\" \");\n  //     for (let i = 0; i < words.length; i++) {\n  //         words[i] = words[i][0].toUpperCase() + words[i].substr(1);\n  //     }\n  //     setText(words.join(\" \"));\n  // }\n\n\n  const onCapitalizeSelectedText = () => {\n    if (window.getSelection) {\n      let seletedText = window.getSelection().toString();\n\n      if (seletedText) {\n        let newText = text.replace(seletedText, seletedText.toUpperCase());\n        setText(newText);\n        props.showAlert(\"Selected text is Capitalized!!!\", \"success\");\n      }\n    }\n  }; // const onChangeTheme = () => {\n  //     let bgcolor = document.querySelector('.body').style.backgroundCOlor;\n  //     if(bgcolor==='#042743'){\n  //         document.querySelector('.body').style.color=\"white\"\n  //     }else{\n  //         document.querySelector('.body').style.color=\"#042743\"\n  //     }\n  // }\n\n\n  const handleCopy = () => {\n    // var text = document.getElementById(\"myBox\");\n    // text.select();\n    navigator.clipboard.writeText(text.value); // document.getSelection().removeAllRanges();\n\n    props.showAlert(\"Text Copied to Clipboard!!!\", \"success\");\n  };\n\n  const handleExraSpaces = () => {\n    let newText = text.split(/[ ]+/);\n    setText(newText.join(\" \"));\n    props.showAlert(\"Extra Spaces removed!!!\", \"success\");\n  };\n\n  const changeHandle = event => {\n    setText(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        color: props.mode === 'dark' ? 'white' : '#042743'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          value: text,\n          onChange: changeHandle,\n          style: {\n            backgroundColor: props.mode === 'dark' ? '#13466e' : 'white',\n            color: props.mode === 'dark' ? 'white' : '#042743'\n          },\n          id: \"myBox\",\n          rows: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: text.length === 0,\n        className: \"btn btn-primary mx-1 my-1\",\n        onClick: changeToUppercase,\n        children: \"Convert to UpperCase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: text.length === 0,\n        className: \"btn btn-primary mx-1 my-1\",\n        onClick: changeToLowercase,\n        children: \"Convert to LowerCase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: text.length === 0,\n        className: \"btn btn-primary mx-1 my-1\",\n        onClick: clearText,\n        children: \"Clear Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: text.length === 0,\n        className: \"btn btn-primary mx-1 my-1\",\n        onClick: onCapitalizeSelectedText,\n        children: \"Capitalize Selected Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: text.length === 0,\n        className: \"btn btn-primary mx-1 my-1\",\n        onClick: handleCopy,\n        children: \"Copy Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: text.length === 0,\n        className: \"btn btn-primary mx-1 my-1\",\n        onClick: handleExraSpaces,\n        children: \"Remove Extra Spaces\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      style: {\n        color: props.mode === 'dark' ? 'white' : '#042743'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Text Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [text.split(/\\s+/).filter(y => {\n          return y.length !== 0;\n        }).length, \" Words and \", text.length, \" characters.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Can be read in \", 0.008 * text.split(\"\").filter(y => {\n          return y.length !== 0;\n        }).length, \" minutes.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text.length > 0 ? text : \"Nothing to preview.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TextForm, \"3t0DFnMi16eB/7p7iIKtjG5r68g=\");\n\n_c = TextForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"sources":["C:/Users/Harish/Desktop/CWH/textutils/src/components/TextForm.js"],"names":["React","useState","TextForm","props","text","setText","changeToUppercase","newText","toUpperCase","showAlert","changeToLowercase","toLowerCase","clearText","onCapitalizeSelectedText","window","getSelection","seletedText","toString","replace","handleCopy","navigator","clipboard","writeText","value","handleExraSpaces","split","join","changeHandle","event","target","color","mode","heading","backgroundColor","length","filter","y"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const [text, setText] = useState(\"\");\r\n\r\n    const changeToUppercase = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n       props.showAlert(\"Converted to UpperCase!!!\", \"success\");\r\n    }\r\n\r\n    const changeToLowercase = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to LowerCase!!!\", \"success\");\r\n    }\r\n\r\n    const clearText = () => {\r\n        let newText = ('');\r\n        setText(newText);\r\n        props.showAlert(\"Text cleared!!!\", \"success\");\r\n    }\r\n\r\n    // const onTranslate = () => {    \r\n    //     var options =    \r\n    //      {    \r\n    //       sourceLanguage:    \r\n    //       google.elements.transliteration.LanguageCode.ENGLISH,    \r\n    //       destinationLanguage:    \r\n    //       google.elements.transliteration.LanguageCode.HINDI,    \r\n    //       shortcutKey:    \r\n    //        'ctrl+g',    \r\n    //        transliterationEnabled:    \r\n    //         true    \r\n    //       };  \r\n    //  }  \r\n\r\n    // const onCapitalize = () => {\r\n    //    if(text.length===0){\r\n    //        console.log(\"Please enter text first.\");\r\n    //    }\r\n        \r\n    //    const words = text.split(\" \");\r\n       \r\n\r\n    //     for (let i = 0; i < words.length; i++) {\r\n    //         words[i] = words[i][0].toUpperCase() + words[i].substr(1);\r\n    //     }\r\n    //     setText(words.join(\" \"));\r\n    // }\r\n\r\n\r\n    \r\n\r\n    const onCapitalizeSelectedText = () => {\r\n        if(window.getSelection){\r\n            let seletedText = window.getSelection().toString();\r\n\r\n            if(seletedText){\r\n                let newText = text.replace(seletedText, seletedText.toUpperCase());\r\n                setText(newText);\r\n                props.showAlert(\"Selected text is Capitalized!!!\",\"success\");\r\n            }\r\n        }\r\n    }\r\n\r\n    // const onChangeTheme = () => {\r\n    //     let bgcolor = document.querySelector('.body').style.backgroundCOlor;\r\n    //     if(bgcolor==='#042743'){\r\n    //         document.querySelector('.body').style.color=\"white\"\r\n    //     }else{\r\n    //         document.querySelector('.body').style.color=\"#042743\"\r\n    //     }\r\n    // }\r\n\r\n    const handleCopy = () => {\r\n        // var text = document.getElementById(\"myBox\");\r\n        // text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        // document.getSelection().removeAllRanges();\r\n        props.showAlert(\"Text Copied to Clipboard!!!\", \"success\");\r\n    }\r\n\r\n    const handleExraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra Spaces removed!!!\", \"success\");\r\n    }\r\n\r\n    const changeHandle = (event) => {\r\n        setText(event.target.value);\r\n    } \r\n\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color : props.mode==='dark'?'white':'#042743'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} onChange={changeHandle} style={{backgroundColor:props.mode==='dark'?'#13466e':'white', color:props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={changeToUppercase}>Convert to UpperCase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={changeToLowercase}>Convert to LowerCase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={clearText}>Clear Text</button>\r\n            {/* <button disabled={text.length===0} className=\"btn btn-primary  my-1 mx-1\" onClick={onCapitalize}>Capitalize</butdisabled=ton> */}\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={onCapitalizeSelectedText}>Capitalize Selected Text</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleExraSpaces}>Remove Extra Spaces</button>\r\n            {/* <button className=\"btn btn-primary mx-1 my-1\" onClick={onChangeTheme}>Change Theme</button> */}\r\n        </div>\r\n\r\n        <div className=\"container my-3\" style={{color : props.mode==='dark'?'white':'#042743'}}>\r\n            <h2>Text Summary</h2>\r\n            {/* <p>{text.split(\" \").filter((y) => (y!==\"\")).length} Words and {text.length} characters.</p> */}\r\n            <p>{text.split(/\\s+/).filter((y) => {return y.length !== 0}).length} Words and {text.length} characters.</p>\r\n            {/* <p>{text.split(\" \").length} Words and {text.length} characters.</p> */}\r\n            <p>Can be read in {0.008 * text.split(\"\").filter((y) => {return y.length !== 0}).length} minutes.</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Nothing to preview.\"}</p>\r\n        </div>\r\n\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}